version: '3.5'

services:
  photoprism-rachel:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    container_name: photoprism-rachel
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
#    security_opt:
#      - seccomp:unconfined
#      - apparmor:unconfined
#    ports:
#      - "2342:2342" # HTTP port (host:container)
    env_file: photoprism.env
    environment:
      PHOTOPRISM_SITE_URL: "https://rachelphotos.ferg.ferguson.pw"  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 50000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # no authentication required (disables password protection)
      PHOTOPRISM_READONLY: "false"                   # don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "true"              # disables storage permission updates on startup .. Default is False
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "true"                # flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_USER: "photoprism"
      PHOTOPRISM_DATABASE_NAME: "photoprismrachel"
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Rachel's Photos"
      PHOTOPRISM_SITE_DESCRIPTION: "Central place to store photos"
      PHOTOPRISM_SITE_AUTHOR: "Rachel Ferguson"
      PHOTOPRISM_BACKUP_PATH: "/photoprism/storage/backup/"
      ## Run/install on first startup (options: update, gpu, tensorflow, davfs, nano, clean):
      # PHOTOPRISM_INIT: "gpu tensorflow"
      ## Hardware video transcoding config (optional)
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # use Video4Linux for AVC transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_qsv"        # use Intel Quick Sync Video for AVC transcoding (default: libx264)
      ## Run as a specific user, group, or with a custom umask (does not work together with "user:")
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
      HOME: "/photoprism"
    ## Start as a non-root user (see https://docs.docker.com/engine/reference/run/#user)
    user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"
    #  - "/dev/nvidia0:/dev/nvidia0"
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/video11:/dev/video11" # Video4Linux (h264_v4l2m2m)
    working_dir: "/photoprism"
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "/host/folder:/photoprism/folder"                # example
      - /mnt/family/pictures/rachelferguson:/photoprism/originals               # original media files (photos and videos)
      # - /mnt/family/pictures/other:/photoprism/originals/other               # original media files (photos and videos)      
      # - "/example/family:/photoprism/originals/family" # *additional* media folders can be mounted like this
      - "/mnt/family/pictures/import/rachelferguson:/photoprism/import"                  # *optional* base folder from which files can be imported to originals
      - "/mnt/family/photoprism/rachelferguson/storage:/photoprism/storage"                  # *writable* storage folder for cache, database, and sidecar files (never remove)
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photoprism-rachel.rule=Host(`rachelphotos.ferg.ferguson.pw`)"
      - "traefik.http.routers.photoprism-rachel.tls=true"
      - "traefik.http.routers.photoprism-rachel.entryPoints=https"
      - "traefik.http.services.photoprism-rachel.loadbalancer.server.scheme=http"
      - "traefik.http.services.photoprism-rachel.loadbalancer.server.port=2342"
      - "traefik.http.routers.photoprism-rachel.middlewares=ferg-ipwhitelist@docker"
      - "com.centurylinklabs.watchtower.enable=true"
