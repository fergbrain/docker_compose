version: '3.3'

services:
  traefik:
    # The official v2.0 Traefik docker image
    image: traefik:v2.6
    container_name: traefik
    environment:
      - LUADNS_API_USERNAME=${LUADNS_API_USERNAME}
      - LUADNS_API_TOKEN=${LUADNS_API_TOKEN}
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api=true"
      - "--api.dashboard=true"
#      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      - "--providers.file=true"
      - "--providers.file.directory=/etc/traefik/"
      - "--providers.file.watch=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.snmptrap.address=:162/udp"
      - "--entrypoints.syslog.address=:514/udp"
      - "--entryPoints.https.forwardedHeaders.trustedIPs=10.10.0.0/24"

# Needed for Unifi controller
      - "--serversTransport.insecureSkipVerify=true"

      ## Let's Encrypt General Config
      - "--certificatesResolvers.letsencrypt.acme.email=andrew@fergcorp.com"
      - "--certificatesResolvers.letsencrypt-http.acme.email=andrew@fergcorp.com"
      - "--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesResolvers.letsencrypt-http.acme.storage=/etc/traefik/acme/acme.json"
       # used during the challenge
      - "--certificatesResolvers.letsencrypt-http.acme.httpChallenge=true"
      - "--certificatesResolvers.letsencrypt-http.acme.httpChallenge.entryPoint=http"
      ## LE DNS Challenge Config
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=luadns"
      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.delayBeforeCheck=0"

      - "--certificatesResolvers.letsencrypt.acme.dnsChallenge.resolvers=ns1.luadns.net:53"

#only needed for staging
#      - "--certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
#      - "--certificatesResolvers.letsencrypt-http.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"

    labels:
      ## HTTP to HTTPS Redirect
      - "traefik.http.routers.http-catchAll.entryPoints=http"
      - "traefik.http.routers.http-catchAll.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchAll.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"

      - "traefik.http.middlewares.ferg-ipwhitelist.ipwhitelist.sourcerange=10.10.0.0/24,10.20.0.0/24,10.100.0.0/24,10.0.0.0/24,192.168.124.0/24"
      - "traefik.http.middlewares.fergsecure-ipwhitelist.ipwhitelist.sourcerange=10.100.0.0/24"
      
      ####
      - "traefik.enable=true"
      - "traefik.http.routers.api.entryPoints=https"
      - "traefik.http.routers.api.rule=Host(`traefik.ferg.ferguson.pw`)"
      

      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.tls.domains[0].main=ferg.ferguson.pw"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.ferg.ferguson.pw"      
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=./config/usersfile"
    
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - target: 80
        published: 80
        mode: host
      # Listen on port 443, default for HTTPS
      - target: 443
        published: 443
        mode: host
      # Listen on port 162, default for SNMP
      - target: 162
        published: 162
        protocol: udp
        mode: host
      - target: 514
        published: 514
        protocol: udp
        mode: host


    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/config:ro
      - ./certs:/etc/traefik/certs
      - ./config/acme/:/etc/traefik/acme/
      - ./config/rules/:/etc/traefik/rules/

    networks:
      - traefik
    restart: unless-stopped


  whoami:
    image: "containous/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.ferg.ferguson.pw`)"
      - "traefik.http.routers.whoami.entrypoints=https"
      - "traefik.http.routers.whoami.middlewares=ferg-ipwhitelist@docker"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
    networks:
      - traefik


networks:
  traefik:
    external: true
